ggplot(aes((x = ideoConsist))) +
geom_histogram(binwidth=0.1, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("Mass Polarization Measure (Public Partisan Distance) Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(lindia) # install.packages, if needed
library(lsr) # for easy correlation
dataset <- read.csv(file = "./final_dataset.csv", header = TRUE)
dataset$is_attack<- as.integer(as.logical(dataset$is_attack))
dataset$is_policy<- as.integer(as.logical(dataset$is_policy))
dataset$is_contrast<- as.integer(as.logical(dataset$is_contrast))
dataset$incumbency<- as.integer(as.logical(dataset$incumbency))
dataset$competitiveness<- as.integer(as.logical(dataset$competitiveness))
# convert party label
convert_party <- function(p) {
if(p == "R") {
return("R");
} else if (p == "D") {
return("D");
} else {
return("T");
}
}
dataset$party <- as.factor(sapply(dataset$party, convert_party))
dataset <- na.omit(dataset)
View(dataset)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
"
vicousness is defined as
- must be an attack
- must not be on policy
- contains words of negative / fear / disgust / anger affect
"
dataset <- dataset %>% mutate(vicousness = is_attack * (1 - is_policy) * (negative + fear + disgust + anger))
relevent_set <- dataset %>%
filter(party != "T") %>%
group_by(user) %>%
summarise(
# controls
"gender" = factor(mean(gender)),
"incumbency" = factor(mean(incumbency)),
"competitiveness" = factor(mean(competitiveness)),
"party" = factor(getmode(party)),
"follower_count" = mean(follower_count),
"young_percent" = mean(percentAge20To44),
"total_tweet_count" = log(n() + 0.00001),
# IVs: elite
"s_dist" = mean(s_dist),
"h_dist" = mean(h_dist),
"total_dist" = mean(s_dist) + mean(h_dist),
# IVs: mass
"ideoConsist" = mean(ideoConsist),
# DVs: PTVI
"attack_per" = mean(is_attack),
"vicousness" = mean(vicousness),
"total_attck_count" = log(sum(is_attack) + 0.00001),
"total_attck_count_not_log" = sum(is_attack),
# DVs: affects
"anticipation" = mean(anticipation),
"positive" = mean(positive),
"joy" = mean(joy),
"trust" = mean(trust),
"surprise" = mean(surprise),
"anger" = mean(anger),
"sadness" = mean(sadness),
"negative" = mean(negative),
"fear" = mean(fear),
"disgust" = mean(disgust))
View(relevent_set)
relevent_set %>%
ggplot(aes((x = total_dist))) +
geom_histogram(binwidth=0.05, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("Elite Polarization Measure (Legislature Ideology Distance) Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes((x = ideoConsist))) +
geom_histogram(binwidth=0.1, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("Mass Polarization Measure (Public Partisan Distance) Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes((x = vicousness))) +
geom_histogram(binwidth=0.01, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("PTVI Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=competitiveness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Race Competitiveness") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Competitiveness",
breaks=c("0", "1"),
labels=c("Competitive", "Not Competitive")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=incumbency)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Incumbency") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Incumbency",
breaks=c("0", "1"),
labels=c("Non-Incumbent", "Incumbent")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=party)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Party") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Party",
breaks=c("R", "D"),
labels=c("Republican", "Democratic")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=gender)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Gender") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Gender",
breaks=c("0", "1"),
labels=c("Female", "Male")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=competitiveness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on Given Race Competitiveness") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Competitiveness",
breaks=c("0", "1"),
labels=c("Competitive", "Not Competitive")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=incumbency)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Incumbency") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Incumbency",
breaks=c("0", "1"),
labels=c("Non-Incumbent", "Incumbent")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=party)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Party") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Party",
breaks=c("R", "D"),
labels=c("Republican", "Democratic")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=gender)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Gender") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Gender",
breaks=c("0", "1"),
labels=c("Female", "Male")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
summarise(max = max(attack_per),
min = min(attack_per),
std = sd(attack_per),
median = median(attack_per),
mode = getmode(attack_per),
mean = mean(attack_per))
relevent_set %>%
summarise(max = max(vicousness),
min = min(vicousness),
std = sd(vicousness),
median = median(vicousness),
mode = getmode(vicousness),
mean = mean(vicousness))
model_bi_at_idvar <- lm(attack_per ~ ideoConsist, data = relevent_set)
model_bi_v_idvar <- lm(vicousness ~ ideoConsist, data = relevent_set)
print("Attack Percentage & Ideology Consistency")
summary(model_bi_at_idvar)
print("PTVI & Ideology Consistency")
summary(model_bi_v_idvar)
model_bi_at_hdist <- lm(attack_per ~ h_dist, data = relevent_set)
model_bi_v_hdist <- lm(vicousness ~ h_dist, data = relevent_set)
model_bi_at_sdist <- lm(attack_per ~ s_dist, data = relevent_set)
model_bi_v_sdist <- lm(vicousness ~ s_dist, data = relevent_set)
model_bi_at_tdist <- lm(attack_per ~ total_dist, data = relevent_set)
model_bi_v_tdist <- lm(vicousness ~ total_dist, data = relevent_set)
print("Attack Percentage & House Ideology Distance")
summary(model_bi_at_hdist)
print("PTVI & House Ideology Distance")
summary(model_bi_v_hdist)
print("Attack Percentage & Senate Ideology Distance")
summary(model_bi_at_sdist)
print("PTVI & Senate Ideology Distance")
summary(model_bi_v_sdist)
print("PTVI & Total Ideology Distance")
summary(model_bi_at_tdist)
print("PTVI & Total Ideology Distance")
summary(model_bi_v_tdist)
correlations <- relevent_set %>% select(-c(attack_per, vicousness, total_attck_count, anticipation, positive, joy, trust, surprise, anger, sadness, negative, fear, disgust, user))
correlations
correlate(as.data.frame(correlations))
model_at_idvar <- lm(attack_per ~ ideoConsist * incumbency * party * competitiveness, data = relevent_set)
model_v_idvar <- lm(vicousness ~ ideoConsist * incumbency * party * competitiveness, data = relevent_set)
print("Attack Percentage & Ideology Consistency Variance")
summary(model_at_idvar)
print("PTVI & Ideology Consistency Variance")
summary(model_v_idvar)
model_at_hdist <- lm(attack_per ~ h_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_hdist <- lm(vicousness ~ h_dist * incumbency * party + competitiveness, data = relevent_set)
model_at_sdist <- lm(attack_per ~ s_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_sdist <- lm(vicousness ~ s_dist * incumbency * party + competitiveness + party, data = relevent_set)
model_at_tdist <- lm(attack_per ~ total_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_tdist <- lm(vicousness ~ total_dist * incumbency * party + competitiveness, data = relevent_set)
print("Attack Percentage & House Ideology Distance")
summary(model_at_hdist)
print("PTVI & House Ideology Distance")
summary(model_v_hdist)
print("Attack Percentage & Senate Ideology Distance")
summary(model_at_sdist)
print("PTVI & Senate Ideology Distance")
summary(model_v_sdist)
print("PTVI & Total Ideology Distance")
summary(model_at_tdist)
print("PTVI & Total Ideology Distance")
summary(model_v_tdist)
summary(lm(anger ~ h_dist + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
summary(lm(anger ~ s_dist + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
summary(lm(anger ~ ideoConsistVariance + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(lindia) # install.packages, if needed
library(lsr) # for easy correlation
dataset <- read.csv(file = "./final_dataset.csv", header = TRUE)
dataset$is_attack<- as.integer(as.logical(dataset$is_attack))
dataset$is_policy<- as.integer(as.logical(dataset$is_policy))
dataset$is_contrast<- as.integer(as.logical(dataset$is_contrast))
dataset$incumbency<- as.integer(as.logical(dataset$incumbency))
dataset$competitiveness<- as.integer(as.logical(dataset$competitiveness))
# convert party label
convert_party <- function(p) {
if(p == "R") {
return("R");
} else if (p == "D") {
return("D");
} else {
return("T");
}
}
dataset$party <- as.factor(sapply(dataset$party, convert_party))
dataset <- na.omit(dataset)
View(dataset)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
"
vicousness is defined as
- must be an attack
- must not be on policy
- contains words of negative / fear / disgust / anger affect
"
dataset <- dataset %>% mutate(vicousness = is_attack * (1 - is_policy) * (negative + fear + disgust + anger))
relevent_set <- dataset %>%
filter(party != "T") %>%
group_by(user) %>%
summarise(
# controls
"gender" = factor(mean(gender)),
"incumbency" = factor(mean(incumbency)),
"competitiveness" = factor(mean(competitiveness)),
"party" = factor(getmode(party)),
"follower_count" = mean(follower_count),
"young_percent" = mean(percentAge20To44),
"total_tweet_count" = log(n() + 0.00001),
# IVs: elite
"s_dist" = mean(s_dist),
"h_dist" = mean(h_dist),
"total_dist" = mean(s_dist) + mean(h_dist),
# IVs: mass
"ideoConsist" = mean(ideoConsist),
# DVs: PTVI
"attack_per" = mean(is_attack),
"vicousness" = mean(vicousness),
"total_attck_count" = log(sum(is_attack) + 0.00001),
"total_attck_count_not_log" = sum(is_attack),
# DVs: affects
"anticipation" = mean(anticipation),
"positive" = mean(positive),
"joy" = mean(joy),
"trust" = mean(trust),
"surprise" = mean(surprise),
"anger" = mean(anger),
"sadness" = mean(sadness),
"negative" = mean(negative),
"fear" = mean(fear),
"disgust" = mean(disgust))
View(relevent_set)
relevent_set %>%
ggplot(aes((x = total_dist))) +
geom_histogram(binwidth=0.05, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("Elite Polarization Measure (Legislature Ideology Distance) Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes((x = ideoConsist))) +
geom_histogram(binwidth=0.1, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("Mass Polarization Measure (Public Partisan Distance) Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes((x = vicousness))) +
geom_histogram(binwidth=0.01, color="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666") +
ggtitle("PTVI Distribution") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=competitiveness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Race Competitiveness") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Competitiveness",
breaks=c("0", "1"),
labels=c("Competitive", "Not Competitive")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=incumbency)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Incumbency") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Incumbency",
breaks=c("0", "1"),
labels=c("Non-Incumbent", "Incumbent")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=party)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Party") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Party",
breaks=c("R", "D"),
labels=c("Republican", "Democratic")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=total_dist, y=vicousness, color=gender)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Elite Polarization Measure on PTVI Given Candidate Gender") +
xlab("Legislature Ideology Distance") +
ylab("PTVI") +
scale_color_discrete(name="Gender",
breaks=c("0", "1"),
labels=c("Female", "Male")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=competitiveness)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on Given Race Competitiveness") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Competitiveness",
breaks=c("0", "1"),
labels=c("Competitive", "Not Competitive")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=incumbency)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Incumbency") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Incumbency",
breaks=c("0", "1"),
labels=c("Non-Incumbent", "Incumbent")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=party)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Party") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Party",
breaks=c("R", "D"),
labels=c("Republican", "Democratic")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
ggplot(aes(x=ideoConsist, y=vicousness, color=gender)) + geom_point() + geom_smooth(method = "lm") +
ggtitle("Effect of Mass Polarization Measure on PTVI Given Candidate Gender") +
xlab("Public Partisan Distance") +
ylab("PTVI") +
scale_color_discrete(name="Gender",
breaks=c("0", "1"),
labels=c("Female", "Male")) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
relevent_set %>%
summarise(max = max(attack_per),
min = min(attack_per),
std = sd(attack_per),
median = median(attack_per),
mode = getmode(attack_per),
mean = mean(attack_per))
relevent_set %>%
summarise(max = max(vicousness),
min = min(vicousness),
std = sd(vicousness),
median = median(vicousness),
mode = getmode(vicousness),
mean = mean(vicousness))
model_bi_at_idvar <- lm(attack_per ~ ideoConsist, data = relevent_set)
model_bi_v_idvar <- lm(vicousness ~ ideoConsist, data = relevent_set)
print("Attack Percentage & Ideology Consistency")
summary(model_bi_at_idvar)
print("PTVI & Ideology Consistency")
summary(model_bi_v_idvar)
model_bi_at_hdist <- lm(attack_per ~ h_dist, data = relevent_set)
model_bi_v_hdist <- lm(vicousness ~ h_dist, data = relevent_set)
model_bi_at_sdist <- lm(attack_per ~ s_dist, data = relevent_set)
model_bi_v_sdist <- lm(vicousness ~ s_dist, data = relevent_set)
model_bi_at_tdist <- lm(attack_per ~ total_dist, data = relevent_set)
model_bi_v_tdist <- lm(vicousness ~ total_dist, data = relevent_set)
print("Attack Percentage & House Ideology Distance")
summary(model_bi_at_hdist)
print("PTVI & House Ideology Distance")
summary(model_bi_v_hdist)
print("Attack Percentage & Senate Ideology Distance")
summary(model_bi_at_sdist)
print("PTVI & Senate Ideology Distance")
summary(model_bi_v_sdist)
print("PTVI & Total Ideology Distance")
summary(model_bi_at_tdist)
print("PTVI & Total Ideology Distance")
summary(model_bi_v_tdist)
correlations <- relevent_set %>% select(-c(attack_per, vicousness, total_attck_count, anticipation, positive, joy, trust, surprise, anger, sadness, negative, fear, disgust, user))
correlations
correlate(as.data.frame(correlations))
model_at_idvar <- lm(attack_per ~ ideoConsist * incumbency * party * competitiveness, data = relevent_set)
model_v_idvar <- lm(vicousness ~ ideoConsist * incumbency * party * competitiveness, data = relevent_set)
print("Attack Percentage & Ideology Consistency Variance")
summary(model_at_idvar)
print("PTVI & Ideology Consistency Variance")
summary(model_v_idvar)
model_at_hdist <- lm(attack_per ~ h_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_hdist <- lm(vicousness ~ h_dist * incumbency * party + competitiveness, data = relevent_set)
model_at_sdist <- lm(attack_per ~ s_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_sdist <- lm(vicousness ~ s_dist * incumbency * party + competitiveness + party, data = relevent_set)
model_at_tdist <- lm(attack_per ~ total_dist * incumbency * party + competitiveness, data = relevent_set)
model_v_tdist <- lm(vicousness ~ total_dist * incumbency * party + competitiveness, data = relevent_set)
print("Attack Percentage & House Ideology Distance")
summary(model_at_hdist)
print("PTVI & House Ideology Distance")
summary(model_v_hdist)
print("Attack Percentage & Senate Ideology Distance")
summary(model_at_sdist)
print("PTVI & Senate Ideology Distance")
summary(model_v_sdist)
print("PTVI & Total Ideology Distance")
summary(model_at_tdist)
print("PTVI & Total Ideology Distance")
summary(model_v_tdist)
summary(lm(anger ~ h_dist + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
summary(lm(anger ~ s_dist + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
summary(lm(anger ~ ideoConsist + gender + incumbency + competitiveness + party + follower_count + total_tweet_count, data = relevent_set))
